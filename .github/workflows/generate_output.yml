---
# This workflow generates the output and pushes it to main branch

name: Generate Output

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches: ["main"]

concurrency:
  group: generate_output-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate matrix with generate-matrix.sh
        run: chmod +x .github/workflows/cvarlist-generate-matrix.sh; .github/workflows/cvarlist-generate-matrix.sh

      - name: Set Matrix
        id: set-matrix
        run: |
          shortnamearray=$(cat shortnamearray.json)
          echo "${shortnamearray}"
          echo -n "matrix=${shortnamearray}" >> $GITHUB_OUTPUT

  generate-output:
    needs: create-matrix
    continue-on-error: true
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      matrix: ${{ fromJSON(needs.create-matrix.outputs.matrix) }}
      max-parallel: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Setup steamcmd
      #   uses: Lordfirespeed/setup-steamcmd@v2

      - name: Run get_cvars.sh
        run: ./get_cvars.sh ${{ matrix.shortname }}

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Add and commit changes
        uses: EndBug/add-and-commit@v9
        with:
          fetch: false
          message: "GitHub Actions build: ${{ steps.date.outputs.date }}"
          push: true
      - name: Sleep for 10s
        uses: juliangruber/sleep-action@v2
        with:
          time: 10s
